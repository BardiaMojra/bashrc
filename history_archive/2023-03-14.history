  998  python -m pdb main.py 
  999  ls
 1000  gitexpress 
 1001  sudo reboot
 1002  cd git
 1003  ls
 1004  cd dlo
 1005  ls
 1006  cd dev
 1007  ls
 1008  cd src/
 1009  ls
 1010  source venv/bin/activate
 1011  python main.py 
 1012  gitexpress 
 1013  ls
 1014  cd ..
 1015  ls
 1016  cd lit_reviews/
 1017  gitexpress 
 1018  cd ..
 1019  ls
 1020  cd nn
 1021  ls
 1022  code . 
 1023  gitexpress 
 1024  exit 
 1025  getfnlint
 1026  ;s
 1027  ls
 1028  python fname_lint.py 
 1029  python3 fname_lint.py 
 1030  ls
 1031  gitexpress 
 1032  cd ..
 1033  cd dlo/
 1034  ls
 1035  code . 
 1036  ls
 1037  cd dev/
 1038  ls
 1039  cd src/
 1040  ls
 1041  meld main_0201_rQ5Lom.py main_0212_JjRTZw.py 
 1042  source venv/bin/activate
 1043  python  main_0212_JjRTZw.py 
 1044  ls
 1045  python  main_0212_JjRTZw.py 
 1046  meld main.py main_0212_JjRTZw.py 
 1047  python  main.py 
 1048  ls
 1049  python  main.py 
 1050  gitexpress 
 1051  cd ..
 1052  ls
 1053  cd nn
 1054  ls
 1055  cd hw
 1056  ls
 1057  code . 
 1058  ls
 1059  cd ..
 1060  ls
 1061  code . 
 1062  ls
 1063  cd hw
 1064  ls
 1065  cd hw01
 1066  ls
 1067  gitexpress 
 1068  ls
 1069  cd ..
 1070  gigpyproj 
 1071  ls
 1072  gigpy
 1073  ls
 1074  clr
 1075  ls
 1076  cd hw01
 1077  ls
 1078  python -m pdb Mojra_01_01.py 
 1079  gitexpress 
 1080  python -m pdb Mojra_01_01.py 
 1081  [A
 1082  python -m pdb Mojra_01_01.py 
 1083  pip install pytest
 1084  deactivate 
 1085  ls
 1086  cd ..
 1087  ls
 1088  shellup setup_venv.sh 
 1089  ls
 1090  sudo rm -rf dlo-venv/
 1091  sudo rm -rf nn
 1092  shellup setup_venv.sh 
 1093  source nn/bin/activate
 1094  py.test --verbose Assignment_01_tests.py
 1095  ls
 1096  cd hw01/
 1097  py.test --verbose Assignment_01_tests.py
 1098  python Mojra_01_01.py 
 1099  py.test --verbose Assignment_01_tests.py
 1100  python Mojra_01_01.py 
 1101  python -m pdb Mojra_01_01.py 
 1102  py.test --verbose Assignment_01_tests.py
 1103  gitexpress 
 1104  python -m pdb Mojra_01_01.py 
 1105  py.test --verbose Assignment_01_tests_single_sample.py
 1106  pip install sklearn
 1107  ls
 1108  cd ..
 1109  ls
 1110  pip install sklearn
 1111  ls
 1112  deactivate 
 1113  ls
 1114  shellup setup_venv.sh 
 1115  source nn/bin/activate
 1116  cd hw01
 1117  ls
 1118  python -m pdb Mojra_01_01.py 
 1119  python3.10 -m pip install --upgrade sklearn
 1120  deactivate
 1121  source ../nn/bin/activate
 1122  python -m pdb Mojra_01_01.py 
 1123  python3.10 -m pip install --upgrade scikit-learn
 1124  sudo python3.10 -m pip install --upgrade scikit-learn
 1125  deactivate 
 1126  ls
 1127  cd //
 1128  cd ~
 1129  ls
 1130  cd git 
 1131  cd nn/
 1132  ls
 1133  cd hw/
 1134  ls
 1135  sudo rm -rf nn
 1136  shellup setup_venv.sh 
 1137  source nn/bin/activate
 1138  cd hw01
 1139  ls
 1140  python -m pdb Mojra_01_01.py 
 1141  py.test --verbose Assignment_01_tests_single_sample.py 
 1142  python -m pdb Mojra_01_01.py 
 1143  gitexpress 
 1144  cd git
 1145  ls
 1146  cd nn
 1147  gitexpress 
 1148  ls
 1149  cd hw/
 1150  ls
 1151  cd ..
 1152  code .
 1153  ls
 1154  cd hw/
 1155  ls
 1156  source nn/bin/activate
 1157  ls
 1158  cd hw01
 1159  ls
 1160  python Assignment_01_tests_single_sample.py 
 1161  py.test --verbose Assignment_01_tests_single_sample.py 
 1162  py.test --verbose Assignment_01_tests_single_sample.py > hw01.log 
 1163  py.test --verbose Assignment_01_tests.py 
 1164  py.test --verbose Assignment_01_tests_single_sample.py
 1165  gitexpress 
 1166  ls
 1167  cd ..
 1168  ls
 1169  cd dlo
 1170  ls
 1171  cd dev/
 1172  ls
 1173  code . 
 1174  deactivate 
 1175  ls
 1176  cd src/
 1177  ls
 1178  source venv/bin/activate
 1179  gitexpress 
 1180  cd ..
 1181  ls
 1182  cd engl6389/
 1183  ls
 1184  code . 
 1185  gitexpress 
 1186  cd ..
 1187  ls 
 1188  cd dlo
 1189  ls
 1190  code . 
 1191  ls
 1192  cd dev/
 1193  ls
 1194  cd src/
 1195  ls
 1196  python -m pdb main.py
 1197  python main.py
 1198  gitexpress 
 1199  reboot
 1200  cd git
 1201  ls
 1202  cd dlo
 1203  ls
 1204  code . 
 1205  ls
 1206  cd dev/
 1207  ls
 1208  cd src/
 1209  ls
 1210  source venv/bin/activate
 1211  python main.py 
 1212  python cont_loop_example.py 
 1213  python -m pdb cont_loop_example.py 
 1214  python  cont_loop_example.py 
 1215  python cont_loop_example.py 
 1216  python -m pdb cont_loop_example.py 
 1217  python -m pdb cont_loop_example.py
 1218  python -m pdb main.py 
 1219  gitexpress 
 1220  python  main.py 
 1221  python  cont_loop_example.py
 1222  python  main.py 
 1223  gitexpress 
 1224  cd ..
 1225  cd nn
 1226  gitexpress 
 1227  cd ..
 1228  cd am
 1229  gitexpress 
 1230  cd ..
 1231  cd engl6389/
 1232  gitexpress 
 1233  poweroff
 1234  cd git
 1235  ls
 1236  cd bashrc/
 1237  code . 
 1238  solaar --help
 1239  solaar
 1240  gitexpress 
 1241  cd ..
 1242  cd git
 1243  ls
 1244  ls __todo/
 1245  rmdir __todo/
 1246  ls
 1247  cd dlo/
 1248  ls
 1249  code . 
 1250  ls
 1251  cd dev/
 1252  ls
 1253  cd src/
 1254  ls
 1255  source venv/bin/activate
 1256  python 
 1257  ls
 1258  python -m pdb main.py 
 1259  python main.py 
 1260  gitexpress 
 1261  sudo reboot
 1262  cd git
 1263  cd dlo
 1264  code .
 1265  cd dev/
 1266  cd src/
 1267  source venv/bin/activate
 1268  python main.py 
 1269  python -m pdb main.py 
 1270  gitexpress 
 1271  gitexpress \
 1272  gitexpress 
 1273  cd ..
 1274  ls
 1275  cd ..
 1276  cd nn/
 1277  ls
 1278  code . 
 1279  ls
 1280  gitexpress 
 1281  cd ..
 1282  cd dlo/
 1283  ls
 1284  cd dev/
 1285  cd ..
 1286  code . 
 1287  cd dev/
 1288  cd src/
 1289  ls
 1290  python -m pdb main.
 1291  python -m pdb main.py 
 1292  code ../../. 
 1293  python -m pdb main.py 
 1294  gitexpress 
 1295  sudo reboot 
 1296  ls
 1297  cd git
 1298  ls
 1299  cd dlo/
 1300  code . 
 1301  ls
 1302  cd dev/se
 1303  cd dev/src/
 1304  ls
 1305  source venv/bin/activate
 1306  ls
 1307  cd git
 1308  npm install -g vsce
 1309  sudo apt update
 1310  sudo apt install nodejs npm
 1311  git clone https://github.com/piyooshm/urscript-extension
 1312  cd urscript-extension/
 1313  npm install 
 1314  npm audit
 1315  npm audit fix --force
 1316  npm audit fix
 1317  npm fund
 1318  npm audit fix --force
 1319  npm audit fix
 1320  ls
 1321  tree -L 3
 1322  open . 
 1323  npm install 
 1324  nci
 1325  ncu
 1326  npm install -g npm-check-updates
 1327  ncu
 1328  sudo npm install -g npm-check-updates
 1329  npm install
 1330  npm audit fix
 1331  npm audit fix --force
 1332  cd ..
 1333  la
 1334  cd dlo
 1335  code . 
 1336  cd dev/
 1337  ls
 1338  cd src/
 1339  ls
 1340  source venv/bin/activate
 1341  python -m pdb main.py 
 1342  gitexpress 
 1343  reboot 
 1344  cd git
 1345  npm install -g vsce
 1346  sudo apt update
 1347  sudo apt install nodejs npm
 1348  git clone https://github.com/piyooshm/urscript-extension
 1349  cd urscript-extension/
 1350  npm install 
 1351  npm audit
 1352  npm audit fix --force
 1353  npm audit fix
 1354  npm fund
 1355  npm audit fix --force
 1356  npm audit fix
 1357  ls
 1358  tree -L 3
 1359  open . 
 1360  npm install 
 1361  nci
 1362  ncu
 1363  npm install -g npm-check-updates
 1364  ncu
 1365  sudo npm install -g npm-check-updates
 1366  npm install
 1367  npm audit fix
 1368  npm audit fix --force
 1369  cd ..
 1370  la
 1371  cd dlo
 1372  code . 
 1373  cd dev/
 1374  ls
 1375  cd src/
 1376  ls
 1377  source venv/bin/activate
 1378  python -m pdb main.py 
 1379  gitexpress 
 1380  reboot 
 1381  cd git
 1382  cd dlo
 1383  code . 
 1384  cd dev/src/
 1385  source venv/bin/activate 
 1386  python -m pdb main.py 
 1387  gitexpress 
 1388  sudo reboot
 1389  cd git/dlo/
 1390  gitexpress 
 1391  cd git
 1392  ls
 1393  cd dlo/
 1394  cd dev/src/
 1395  ls
 1396  code ../../
 1397  source venv/bin/source
 1398  source venv/bin/activate 
 1399  python -m pdb main.py 
 1400  sudo reboot
 1401  cd git
 1402  cd dlo
 1403  ls
 1404  code . 
 1405  ls
 1406  cd dev
 1407  cd src
 1408  ls
 1409  source venv/bin/activate
 1410  python -m pdb main.py 
 1411  python rsParser.py 
 1412  python -m pdb main.py 
 1413  python rsParser.py 
 1414  python -m pdb rsParser.py 
 1415  python main.py 
 1416  python -m pdb rsParser.py 
 1417  exit
 1418  cd gigt
 1419  cd git
 1420  cd dlo/
 1421  cd dev/src/
 1422  source venv/bin/activate
 1423  python rsParser.py 
 1424  sudo reboot
 1425  cd git
 1426  cd dlo
 1427  cd dev/
 1428  cd src/
 1429  source venv/bin/activate
 1430  python rsParser.py 
 1431  lshw
 1432  python main.py 
 1433  code ../..
 1434  python rsParser.py 
 1435  python main.py 
 1436  exit
 1437  cheat 
 1438  open . 
 1439  cd ..
 1440  ls
 1441  cd cv 
 1442  code . 
 1443  gigtex
 1444  git add tex.gitignore 
 1445  git status
 1446  git commit -m "added gitignore."
 1447  git push
 1448  git status
 1449  gitexpress 
 1450  cd ,,
 1451  cd ..
 1452  cd engl6389/
 1453  gitexpress 
 1454  cd .. 
 1455  cd report/
 1456  code . 
 1457  cd ..
 1458  cd cv
 1459  code .
 1460  gitexpress 
 1461  cd ..
 1462  cd nn
 1463  gitexpress 
 1464  cd ..
 1465  cd engl6389/
 1466  gitexpress 
 1467  cd ..
 1468  cd report/
 1469  gitexpress 
 1470  cd ..
 1471  cd resume/
 1472  gitexpress 
 1473  cd ..
 1474  cd report/
 1475  gitexpress 
 1476  sudo reboot
 1477  sudo apt update
 1478  sudo apt list --upgradable 
 1479  sudo apt upgrade
 1480  cd git
 1481  cd dlo/
 1482  cd dev/src/
 1483  source venv/bin/activate
 1484  python rsParser.py 
 1485  python main.py 
 1486  python rsParser.py 
 1487  python main.py 
 1488  gitexpress 
 1489  python rsParser.py 
 1490  python main.py 
 1491  python rsParser.py 
 1492  python -m pdb rsParser.py 
 1493  python -m pdb main.py 
 1494  python -m pdb rsParser.py 
 1495  python -m pdb main.py 
 1496  python -m pdb rsParser.py 
 1497  gitexpress 
 1498  cd ..
 1499  cd cv
 1500  ls
 1501  code .
 1502  ls
 1503  cd ..
 1504  cd engl6389/
 1505  ls
 1506  code . 
 1507  gitexpress 
 1508  sudo reboot
 1509  cd git
 1510  cd bashrc/
 1511  ls
 1512  code . 
 1513  sudo -u root -H -s bash refind_setup.sh
 1514  sudo thunar
 1515  ls
 1516  gitexpress 
 1517  cd ..
 1518  ls
 1519  cd report/
 1520  code . 
 1521  open .
 1522  cd .. 
 1523  cd engl6389/
 1524  ls
 1525  code . 
 1526  gitexpress 
 1527  cd ..
 1528  cd report/
 1529  gitexpress 
 1530  ls
 1531  cd ..
 1532  cd engl6389/
 1533  ls
 1534  code . 
 1535  gitexpress 
 1536  cd ..
 1537  cd sv
 1538  cd cv 
 1539  gitexpress 
 1540  cd ..
 1541  cd engl6389/
 1542  code . 
 1543  sudo apt update 
 1544  sudo reboot
 1545  cd proj/write/
 1546  ls
 1547  git status
 1548  ls
 1549  gitexpress 
 1550  ls
 1551  git rm proposal_dlo_dynamic_dataset_Bardia-Mojra.aux *.bbl *.blg proposal_dlo_dynamic_dataset_Bardia-Mojra.fdb_latexmk proposal_dlo_dynamic_dataset_Bardia-Mojra.fls proposal_dlo_dynamic_dataset_Bardia-Mojra.log 
 1552  git rm proposal_dlo_dynamic_dataset_Bardia-Mojra.aux *.bbl *.blg proposal_dlo_dynamic_dataset_Bardia-Mojra.fdb_latexmk proposal_dlo_dynamic_dataset_Bardia-Mojra.fls 
 1553  ls
 1554  rm *.log
 1555  ls
 1556  gitexpress 
 1557  ls
 1558  git rm proj.md 
 1559  gitexpress 
 1560  cd ..
 1561  cd engl6389/
 1562  gitexpress 
 1563  cd git
 1564  ls
 1565  exit
 1566  exit
 1567  cd git
 1568  ls
 1569  cd cv 
 1570  code . 
 1571  gitexpress 
 1572  exit
 1573  ls
 1574  docker run hello-world
 1575  cd git
 1576  cd bashrc/
 1577  gitexpress 
 1578  exit
 1579  docker run --rm --net=host --privileged --volume=/dev:/dev -it iory/realsense-ros-docker:kinetic /bin/bash -i -c 'roslaunch realsense2_camera rs_rgbd.launch enable_pointcloud:=true align_depth:=false depth_registered_processing:=true align_depth:=true'
 1580  echo --->> docker installed.;
 1581  echo "--->> docker installed."
 1582  cd git
 1583  cd bashrc/
 1584  shellup docker_postinstall_setup.sh 
 1585  docker run hello-world
 1586  gitexpress 
 1587  logbash 
 1588  gitexpress 
 1589  cd ..
 1590  cd .. 
 1591  ls
 1592  tree -L 3 .local
 1593  tree -L 2 .local
 1594  ls
 1595  sudo rm -rf docker 
 1596  docker run hello-world
 1597  ls
 1598  sudo groupadd docker
 1599  sudo usermod -aG docker $USER
 1600  newgrp docker
 1601  exit
 1602  sudo mkdir /usr/local/bin/docker-compose
 1603  shw -c display
 1604  lshw -c display
 1605  docker pull lmwafer/realsense-ready
 1606  sudo docker pull lmwafer/realsense-ready
 1607  sudo xhost +local:root && docker run --privileged --name realsense-2-container --rm -p 8084:8084 -e DISPLAY=$DISPLAY -e QT_X11_NO_MITSHM=1 -v /tmp/.X11-unix:/tmp/.X11-unix -v /dev:/dev:ro --gpus all -it lmwafer/realsense-ready:2.0-ubuntu18.04
 1608  sudo xhost +local:root && sudo docker run --privileged --name realsense-2-container --rm -p 8084:8084 -e DISPLAY=$DISPLAY -e QT_X11_NO_MITSHM=1 -v /tmp/.X11-unix:/tmp/.X11-unix -v /dev:/dev:ro --gpus all -it lmwafer/realsense-ready:2.0-ubuntu18.04
 1609  xhost +local:docker
 1610  docker run --rm --net=host --privileged --volume=/dev:/dev -it iory/realsense-ros-docker:kinetic /bin/bash -i -c 'roslaunch realsense2_camera rs_rgbd.launch initial_reset:=true enable_pointcloud:=true align_depth:=false depth_registered_processing:=true align_depth:=true'
 1611  sudo docker run --rm --net=host --privileged --volume=/dev:/dev -it iory/realsense-ros-docker:kinetic /bin/bash -i -c 'roslaunch realsense2_camera rs_rgbd.launch initial_reset:=true enable_pointcloud:=true align_depth:=false depth_registered_processing:=true align_depth:=true'
 1612  cd git
 1613  ls
 1614  git clone https://github.com/BardiaMojra/docker_sandbox.git 
 1615  cd docker_sandbox/
 1616  ls
 1617  code . 
 1618  cd ..
 1619  cd dlo/
 1620  code . 
 1621  gitexpress 
 1622  cd ..
 1623  cd docker_sandbox/
 1624  gitexpress 
 1625  cheat 
 1626  okular docker_cheatsheet.pdf &
 1627  okular docker_user_guide.pdf &
 1628  gitexpress 
 1629  cd ..
 1630  ls 
 1631  cd rsdocker/
 1632  code . 
 1633  cd git
 1634  cd engl6389/
 1635  gitexpress 
 1636  sudo poweroff 
 1637  cd git
 1638  cd bashrc/
 1639  ls
 1640  code . 
 1641  shellup docker_setup.sh 
 1642  gitexpress 
 1643  cd ..
 1644  git clone https://github.com/BardiaMojra/docker-ros-realsense.git rsdocker
 1645  cd rsdocker/
 1646  ls
 1647  code . 
 1648  cd .. 
 1649  cd ..
 1650  ls
 1651  docker run --rm --net=host --privileged --volume=/dev:/dev -it iory/realsense-ros-docker:kinetic /bin/bash -i -c 'roslaunch realsense2_camera rs_rgbd.launch enable_pointcloud:=true align_depth:=false depth_registered_processing:=true align_depth:=true'
 1652  sudo docker run --rm --net=host --privileged --volume=/dev:/dev -it iory/realsense-ros-docker:kinetic /bin/bash -i -c 'roslaunch realsense2_camera rs_rgbd.launch enable_pointcloud:=true align_depth:=false depth_registered_processing:=true align_depth:=true'
 1653  docker run --rm --net=host --privileged --volume=/dev:/dev -it iory/realsense-ros-docker:kinetic /bin/bash -i -c 'roslaunch realsense2_camera rs_rgbd.launch initial_reset:=true enable_pointcloud:=true align_depth:=false depth_registered_processing:=true align_depth:=true'
 1654  sudo docker run --rm --net=host --privileged --volume=/dev:/dev -it iory/realsense-ros-docker:kinetic /bin/bash -i -c 'roslaunch realsense2_camera rs_rgbd.launch initial_reset:=true enable_pointcloud:=true align_depth:=false depth_registered_processing:=true align_depth:=true'
 1655  docker pull cognimbus/realsense2
 1656  sudo docker pull cognimbus/ros2-realsense-camera
 1657  docker image ls
 1658  sudo docker image ls
 1659  sudo docker run --rm --net=host --privileged --volume=/dev:/dev -it cognimbus/ros2-realsense-camera
 1660  cd git
 1661  cd resume/
 1662  code . 
 1663  open . 
 1664  gitexpress 
 1665  cd ..
 1666  cd engl6389/
 1667  gitexpress 
 1668  sudo poweroff
 1669  docker pull librealsense/librealsense
 1670  docker images
 1671  docker image rm cognimbus/ros2-realsense-camera:latest 
 1672  docker images
 1673  docker image rm hello-world:latest 
 1674  docker image rm -f hello-world:latest 
 1675  exit
 1676  cheat 
 1677  okular tmux_cheatsheet_001.pdf 
 1678  okular tmux_cheatsheet_001.pdf &
 1679  exit
 1680  cd git
 1681  cd bashrc/
 1682  code . 
 1683  exit
 1684  cd git
 1685  cd dlo/
 1686  gitexpress 
 1687  exit
 1688  ros2 multicast send
 1689  source /opt/ros/humble/setup.bash 
 1690  dlo_ws/install/local_setup.bash
 1691  lsd
 1692  mybash
 1693  sudo chown 777 -R smerx:smerx dlo_ws/
 1694  sudo chown 777 -R  dlo_ws/
 1695  lsd
 1696  sudo chown -R smerx:smerx dlo_ws/
 1697  lsd
 1698  sudo chown -R 777 dlo_ws/
 1699  lsd
 1700  sudo chown -R 777 dlo_ws/
 1701  sudo chmod -R 777 dlo_ws/
 1702  lsd
 1703  sudo chown -R smerx dlo_ws/
 1704  lsd
 1705  sb
 1706  swsdlo 
 1707  lsd
 1708  logbash
 1709  gitexpress 
 1710  cd ..
 1711  ros2 multicast send 
 1712  exit
 1713  cd dlo_ws/
 1714  source /opt/ros/humble/setup.bash
 1715  . install/local_setup.bash
 1716  ros2 run turtlesim turtlesim_node 
 1717  ros2 multicast recieve
 1718  sudo ufw allow in proto udp to 224.0.0.0/4
 1719  sudo ufw allow in proto udp from 224.0.0.0/4
 1720  ros2 multicast receive
 1721  exit 
 1722  tmux
 1723  exit
 1724  chown --help
 1725  chown -R --help
 1726  chmod --help
 1727  exit
 1728  source /opt/ros/humble/setup.bash
 1729  mkdir -p ~/dlo_ws/src
 1730  cd ~/dlo_ws/src
 1731  git clone https://github.com/ros/ros_tutorials.git -b humble-devel
 1732  ls
 1733  cd ..
 1734  rosdep install -i --from-path src --rosdistro humble -y
 1735  sudo apt install python3-rosdep2
 1736  rosdep install -i --from-path src --rosdistro humble -y
 1737  rosdep update
 1738  rosdep install -i --from-path src --rosdistro humble -y
 1739  colcon build 
 1740  sudo apt install python3-colcon-common-extensions
 1741  colcon build
 1742  exit
 1743  cd git 
 1744  ls
 1745  sudo rm -rf rsdocker/
 1746  ls
 1747  tmux
 1748  mybash
 1749  cd ..
 1750  ls
 1751  grep *.tmux.conf .
 1752  grep *.tmux.conf 
 1753  grep .tmux.conf 
 1754  open . 
 1755  gedit .tmux.conf
 1756  logbash
 1757  sb
 1758  logallcfgs 
 1759  gitexpress 
 1760  tmux kill-server && tmux
 1761  sudo apt update
 1762  sudo apt install bash-completion
 1763  sudo apt install --reinstall bash-completion
 1764  sb
 1765  cd ..
 1766  cd git/bashrc/
 1767  gitexpress 
 1768  cd ..
 1769  ls
 1770  mybash
 1771  ls
 1772  tmux
 1773  source /opt/ros/humble/setup.bash
 1774  tmux
 1775  exit
 1776  docker run -it --net=host osrf/ros:noetic-desktop-full bash
 1777  cd git/dlo/
 1778  code . 
 1779  gitexpress 
 1780  cd ..
 1781  cd nn
 1782  gitexpress 
 1783  cd ..
 1784  catbash 
 1785  docker run -it --rm     -v /dev:/dev     --device-cgroup-rule "c 81:* rmw"     --device-cgroup-rule "c 189:* rmw"     librealsense
 1786  docker pull librealsense/librealsense
 1787  docker run -it --rm     -v /dev:/dev     --device-cgroup-rule "c 81:* rmw"     --device-cgroup-rule "c 189:* rmw"     librealsense
 1788  history 
 1789  xhost +local:root
 1790  docker run -it --rm     -v /dev:/dev     --device-cgroup-rule "c 81:* rmw"     --device-cgroup-rule "c 189:* rmw"     librealsense/librealsense rs-depth
 1791  docker run -it osrf/ros:noetic-desktop-full bash
 1792  docker run -it --net=host osrf/ros:noetic-desktop-full bash
 1793  docker run -it --net=host osrf/ros:noetic-desktop-full bash -it -c "roslaunch gazebo_ros empty_world.launch"
 1794  xhost + 
 1795  docker run -it --net=host osrf/ros:noetic-desktop-full bash -it -c "roslaunch gazebo_ros empty_world.launch"
 1796  docker run -it --net=host     --env="DISPLAY"     --env="QT_X11_NO_MITSHM=1"     --volume="/tmp/.X11-unix:/tmp/.X11-unix:rw"     osrf/ros:noetic-desktop-full     bash -it -c "roslaunch gazebo_ros empty_world.launch"
 1797  docker run -it --net=host     --env="DISPLAY"     --env="QT_X11_NO_MITSHM=1"     --volume="/tmp/.X11-unix:/tmp/.X11-unix:rw"     osrf/ros:noetic-desktop-full     bash -it -c "roslaunch gazebo_ros empty_world.launch"
 1798  cd git
 1799  ls
 1800  cd dlo/
 1801  ls
 1802  cd ROS-docker/
 1803  ls
 1804  cd master/
 1805  ls
 1806  cd ..
 1807  ls
 1808  rmdir master
 1809  ls
 1810  cd ros_ws/
 1811  ls
 1812  bash build.sh 
 1813  docker run -it --net=host --gpus all     --env="NVIDIA_DRIVER_CAPABILITIES=all"     --env="DISPLAY"     --env="QT_X11_NO_MITSHM=1"     --volume="/tmp/.X11-unix:/tmp/.X11-unix:rw"     nvidia_ros     bash
 1814  nvidia-smi
 1815  sudo apt update
 1816  sudo apt install -y nvidia-container-toolkit
 1817  docker version 
 1818  sudo apt-get update     && sudo apt-get install -y nvidia-container-toolkit-base
 1819  curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg
 1820  sudo nano /etc/apt/sources.list.d/nvidia-container-toolkit.list
 1821  sudo apt update
 1822  sudo apt install nvidia-docker2
 1823  nvidia-ctk --version
 1824  sudo nvidia-ctk cdi generate --output=/etc/cdi/nvidia.yaml
 1825  grep "  name:" /etc/cdi/nvidia.yaml
 1826  nvidia-smi -L
 1827  nvidia-smi --help
 1828  sudo nvidia-ctk runtime configure --runtime=docker
 1829  sudo systemctl restart docker
 1830  sudo docker run --rm --runtime=nvidia --gpus all nvidia/cuda:11.6.2-base-ubuntu20.04 nvidia-smi
 1831  docker images
 1832  docker run -it --net=host --gpus all     --env="NVIDIA_DRIVER_CAPABILITIES=all"     --env="DISPLAY"     --env="QT_X11_NO_MITSHM=1"     --volume="/tmp/.X11-unix:/tmp/.X11-unix:rw"     nvidia_ros     bash
 1833  bash build.sh 
 1834  [200~docker run -it --net=host --gpus all     --env="NVIDIA_DRIVER_CAPABILITIES=all"     --env="DISPLAY"     --env="QT_X11_NO_MITSHM=1"     --volume="/tmp/.X11-unix:/tmp/.X11-unix:rw"     nvidia_ros     bash
 1835  docker run -it --net=host --gpus all     --env="NVIDIA_DRIVER_CAPABILITIES=all"     --env="DISPLAY"     --env="QT_X11_NO_MITSHM=1"     --volume="/tmp/.X11-unix:/tmp/.X11-unix:rw"     nvidia_ros     bash
 1836  docker run -it --net=host --gpus all --device=/dev/dri:/dev/dri     --env="NVIDIA_DRIVER_CAPABILITIES=all"     --env="DISPLAY"     --env="QT_X11_NO_MITSHM=1"     --volume="/tmp/.X11-unix:/tmp/.X11-unix:rw"     nvidia_ros     bash
 1837  ls
 1838  docker images
 1839  cd ..
 1840  ;s
 1841  ls
 1842  cd NvidiaNoeticTBot3_Docker/
 1843  ls
 1844  cd ..
 1845  ls
 1846  cd nvNoeticTB3_Docker/
 1847  ls
 1848  bash build_nvNoetic.sh 
 1849  bash build_nvnoetic.sh 
 1850  ./build_tb3_base.sh
 1851  lsd
 1852  bash build_tb3_base.sh
 1853  bash build_nvnoetic.sh 
 1854  bash build_tb3_base.sh 
 1855  ./run.sh tb3_base "roslaunch gazebo_ros empty_world.launch"
 1856  bash run.sh tb3_base "roslaunch gazebo_ros empty_world.launch"
 1857  lsd
 1858  chmod 777 run.sh 
 1859  lsd
 1860  ./run.sh tb3_base "roslaunch gazebo_ros empty_world.launch"
 1861  history 
 1862  docker run -it --net=host --gpus all --device=/dev/dri:/dev/dri     --env="NVIDIA_DRIVER_CAPABILITIES=all"     --env="DISPLAY"     --env="QT_X11_NO_MITSHM=1"     --volume="/tmp/.X11-unix:/tmp/.X11-unix:rw"     nvidia_ros     bash
 1863  gitexpress 
 1864  exit
 1865  cd git
 1866  cd bashrc/
 1867  code . 
 1868  cd ..
 1869  cd dlo/
 1870  gitexpress 
 1871  exit
 1872  docker run hello-world
 1873  docker run --help
 1874  docker --help
 1875  docker info
 1876  sudo systemctl stop docker
 1877  cp -au /var/lib/docker /var/lib/docker.bk
 1878  sudo cp -au /var/lib/docker /var/lib/docker.bk
 1879  sudo systemctl start docker
 1880  sudo dockerd --debug
 1881  df -h
 1882  sudo find /var/log -type f -delete
 1883  sudo rm -rf /var/cache/apt/*
 1884  sudo apt clean all
 1885  df -h
 1886  sudo ls /var/lib/
 1887  sudo rm -rf /var/lib/docker.bk
 1888  sudo systemctl restart docker
 1889  sudo mv /var/lib/docker/volumes/metadata.db /var/lib/docker/volumes/metadata.db.bk
 1890  sudo systemctl restart docker
 1891  sudo systemctl status docker
 1892  sudo apt-get remove docker docker-engine docker.io containerd runc
 1893  ls /var/lib/docker/
 1894  sudo ls /var/lib/docker/
 1895  sudo tree -L 2 /var/lib/docker/
 1896  sudo apt-get purge docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin docker-ce-rootless-extras
 1897  sudo rm -rf /var/lib/docker
 1898  sudo rm -rf /var/lib/containerd
 1899  sudo tree -L 2 /var/lib/docker/
 1900  sudo tree -L 2 /var/lib/container/
 1901  sudo tree -L 2 /var/lib/containerd/
 1902  sudo tree -L 2 /var/lib/
 1903  sudo tree -L 1 /var/lib/
 1904  mybash
 1905  echo $PATH
 1906  sb
 1907  echo $PATH
 1908  history 
 1909  lsb_release -a
 1910  echo $ROS_DISTRO
 1911  locale
 1912  sudo apt update && sudo apt install locales
 1913  sudo locale-gen en_US en_US.UTF-8
 1914  sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
 1915  export LANG=en_US.UTF-8
 1916  locale
 1917  sb
 1918  logbah
 1919  logbash 
 1920  gitexpress 
 1921  ls
 1922  cd ..
 1923  ls
 1924  cd dlo
 1925  ls
 1926  code . 
 1927  cd ..
 1928  ls
 1929  git clone https://github.com/BardiaMojra/realsense_ros2_docker.git
 1930  cd dlo
 1931  gitexpress 
 1932  ls
 1933  cd ..
 1934  ls
 1935  cd nn
 1936  code . 
 1937  gitexpress 
 1938  gitw
 1939  gitexpress 
 1940  cd ..
 1941  ls
 1942  docker run --rm -it theconstructsim/ros2:examples ros2 run examples_rclpy_minimal_publisher publisher_member_function
 1943  sudo apt-key list
 1944  sudo apt-get update
 1945  sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
 1946  sudo docker run hello-world
 1947  sudo groupadd docker
 1948  sudo usermod -aG docker $USER
 1949  newgrp docker
 1950  docker run hello-world
 1951  lsd
 1952  cd ..
 1953  ls
 1954  cd smerx/
 1955  ls
 1956  docker pull osrf/ros:noetic-desktop-full
 1957  docker run -it osrf/ros:noetic-desktop-full roscore
 1958  docker run -it --net=host osrf/ros:noetic-desktop-full roscore
 1959  sudo poweroff
 1960  echo $XDG_SESSION_TYPE
 1961  gedit ?etc/gdm3/custom.conf
 1962  gedit /etc/gdm3/custom.conf
 1963  sudo gedit /etc/gdm3/custom.conf
 1964  nvidia-settings
 1965  sudo systemctl restart gdm3
 1966  sudo reboot
 1967  cd git
 1968  cd bashrc/
 1969  ls
 1970  code . 
 1971  exit
 1972  sudo gedit /etc/gdm3/custom.conf
 1973  cd git/bashrc/
 1974  code .
 1975  nvidia-msi
 1976  nvidia-smi
 1977  nvidia-xconfig 
 1978  sudo nvidia-xconfig 
 1979  cat /etc/X11/xorg.conf
 1980  sudo nvidia-xconfig 
 1981  cat ~/.config/monitors.xml
 1982  sudo cp ~./.config/monitors.xml /var/lib/gdm3/.config/monitors.xml
 1983  sudo cp ~/.config/monitors.xml /var/lib/gdm3/.config/monitors.xml
 1984  sudo gedit /etc/gdm3/custom.conf
 1985  nvidia-smi -i 0 -pm ENABLED
 1986  nvidia-smi -i 0 - q
 1987  nvidia-smi -i 0 -q
 1988  sudo apt update
 1989  gitexpress 
 1990  sudo poweroff
 1991  sudo apt install gnome-shell-extension-prefs
 1992  sudo poweroff
 1993  history 
 1994  sudo gedit /etc/gdm3/custom.conf
 1995  sudo reboot 
 1996  history 
 1997  logallcfgs 
